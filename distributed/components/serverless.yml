service: pos-components
frameworkVersion: ">=1.34.0 <2.0.0"

provider:
  name: aws
  runtime: python3.8

plugins:
  - serverless-python-requirements
  - serverless-dynamodb-local
  - serverless-offline # serverless-offline needs to be last in the list

custom:
  pythonRequirements:
    fileName: requirements.txt
    layer:
      name: deps
      description: Python dependency layer
      compatibleRuntimes:
        - python3.8
  dynamodb:
  # If you only want to use DynamoDB Local in some stages, declare them here
    stages:
      - dev
    start:
      port: 8000
      inMemory: true
      heapInitial: 200m
      heapMax: 1g
      migrate: true
      seed: true
      convertEmptyValues: true

layers:
  adapter:
    path: layer # required, path to layer contents on disk
    name: PosAdapterLayer # optional, Deployed Lambda layer name
    description: Layer for sharing the PoS adapter module # optional, Description to publish to AWS
    licenseInfo: GPLv3 # optional, a string specifying license information
    package:
      include:
        - '!./**'
        - adapter.py
  emitter:
    path: layer # required, path to layer contents on disk
    name: PosEmitterLayer # optional, Deployed Lambda layer name
    description: Layer for sharing the PoS emitter module # optional, Description to publish to AWS
    licenseInfo: GPLv3 # optional, a string specifying license information
    package:
      include:
        - '!./**'
        - emitter.py
  receiver:
    path: layer # required, path to layer contents on disk
    name: PosReceiverLayer # optional, Deployed Lambda layer name
    description: Layer for sharing the PoS receiver module # optional, Description to publish to AWS
    licenseInfo: GPLv3 # optional, a string specifying license information
    package:
      include:
        - '!./**'
        - receiver.py

resources:
  Outputs:
    DepsLayerExport:
      Value:
        Ref: PythonRequirementsLambdaLayer
      Export:
        Name: PosDepsLayer
    AdapterLayerExport:
      Value:
        Ref: AdapterLambdaLayer
      Export:
        Name: PosAdapterLayer
    EmitterLayerExport:
      Value:
        Ref: EmitterLambdaLayer
      Export:
        Name: PosEmitterLayer
    ReceiverLayerExport:
      Value:
        Ref: ReceiverLambdaLayer
      Export:
        Name: PosReceiverLayer
